language: generic
sudo: required
services:
  - docker

env:
  global:
    # Store the git SHA for image tagging in the deploy script
    - SHA=$(git rev-parse HEAD)
    # Prevents Google CLI from displaying promts requiring user input
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1

before_install:
  # Decrypt the google cloud login from encrypted file in Travis CI.
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
  # Download and install the google cloud SDK
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl
  # Authorization with google cloud
  - gcloud auth activate-service-account --key-file service-account.json
  # Telling google cloud which project to work on
  - gcloud config set project multi-k8s-377409
  # Specify compute zone (the one I originally chose)
  - gcloud config set compute/zone europe-north1-a
  # Specify cluster name
  - gcloud container clusters get-credentials multi-cluster
  # Log in to docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  # Build image for testing (only the client has tests). Temporary tag.
  - docker build -t siving/react-test -f ./client/Dockerfile.dev ./client

script:
  # Run a test on the image created previously
  - docker run -e CI=true siving/react-test npm test

deploy:
  # Run a custom deploy script
  provider: script
  script: bash ./deploy.sh
  # Only run deployment when master branch has been updated
  on:
    branch: master
